// <auto-generated />
using System;
using CGZBot3.Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CGZBot3.Data.Database.SettingsMigrations
{
    [DbContext(typeof(SettingsDatabaseContext))]
    [Migration("20220219101658_TestSystem")]
    partial class TestSystem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("CGZBot3.Data.ServerSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ServerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TestSystemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.HasIndex("TestSystemId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("CGZBot3.Systems.Test.Settings.TestSettingsDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SomeString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("TestChannel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TestSettings");
                });

            modelBuilder.Entity("CGZBot3.Data.ServerSettings", b =>
                {
                    b.HasOne("CGZBot3.Systems.Test.Settings.TestSettingsDB", "TestSystem")
                        .WithMany()
                        .HasForeignKey("TestSystemId");

                    b.Navigation("TestSystem");
                });
#pragma warning restore 612, 618
        }
    }
}
